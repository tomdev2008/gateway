package com.yoho.yhorder.invoice.webservice;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-05-24T18:33:27.851+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "DZFPService", 
                  wsdlLocation = "${ws.fp.url}",
                  targetNamespace = "http://dsqzjk.dzfpqz")
public class DZFPService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://dsqzjk.dzfpqz", "DZFPService");
    public final static QName DZFPServiceHttpPort = new QName("http://dsqzjk.dzfpqz", "DZFPServiceHttpPort");
    static {
        URL url = null;
        try {
            url = new URL("https://202.104.113.26:8999/fpt_dsqz/services/DZFPService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(DZFPService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/D:/backup/yoho/任务/5/23/DZFPService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public DZFPService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DZFPService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DZFPService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public DZFPService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public DZFPService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public DZFPService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns DZFPServicePortType
     */
    @WebEndpoint(name = "DZFPServiceHttpPort")
    public DZFPServicePortType getDZFPServiceHttpPort() {
        return super.getPort(DZFPServiceHttpPort, DZFPServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DZFPServicePortType
     */
    @WebEndpoint(name = "DZFPServiceHttpPort")
    public DZFPServicePortType getDZFPServiceHttpPort(WebServiceFeature... features) {
        return super.getPort(DZFPServiceHttpPort, DZFPServicePortType.class, features);
    }

}
